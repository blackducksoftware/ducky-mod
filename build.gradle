buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.14.0'
}

apply plugin: 'net.minecraftforge.gradle.forge'


version = "1.11.2-0.0.2-SNAPSHOT"
group= "com.blackducksoftware.integration" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ducky-mod"

sourceCompatibility = targetCompatibility = "1.7" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.7"
}

minecraft {
    version = "1.11.2-13.20.1.2386"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161220"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

license {
    header = file('HEADER')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ignoreFailures = true
    includes (["**/*.groovy", "**/*.java"])
    excludes ([
        "/src/test/*.groovy",
        "src/test/*.java"
    ])
}
